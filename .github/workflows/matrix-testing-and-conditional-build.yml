name: Matrix Testing & Conditional Build

on:
  push:
    branches: [main]
    tags:
      - 'v*.*.*'
  pull_request:
  schedule:
    - cron: "0 3 * * *"   # Nightly test at 3 AM UTC
  workflow_dispatch:
    inputs:
      skip_build:
        description: "Skip build step?"
        required: false
        default: "false"

permissions:
  contents: read
  pages: write
  id-token: write


jobs:
  Matrix-Test:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./frontend/
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [16, 18, 20]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: |
          mkdir -p test-results
          npm test > test-results/results-${{ matrix.os }}-${{ matrix.node-version }}.txt

          # npm test -- --ci > test-results/results-ci-${{ matrix.node-version }}.txt

      - name: Debug
        run: echo "frontend/test-results/results-${{ matrix.os }}-${{ matrix.node-version }}.txt"
        
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.node-version }}
          path: frontend/test-results/results-${{ matrix.os }}-${{ matrix.node-version }}.txt

  Build:
    runs-on: ubuntu-latest
    needs: Matrix-Test
    if: |
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')) &&
      github.event.inputs.skip_build != 'true'
    defaults:
      run:
        working-directory: frontend/
    concurrency:
      group: build-${{ github.ref }}
      # group: matrix-test-${{ matrix.os }}-${{ matrix['node-version'] }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          path: test-results

      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Summarize test results
      #   run: |
      #     echo "=== Combined Test Results ==="
      #     cat test-results/*/results-*.txt > test-results/all-results.txt
      #     cat test-results/all-results.txt

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: |
          npm run build
          mkdir -p dist
          echo "Build complete for $GITHUB_SHA" > dist/build.txt

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-dist
          path: frontend/dist/


  Deploy-to-GH-Pages:
    runs-on: ubuntu-latest
    needs: Build
    environment: github-pages
    concurrency:
      group: deploy-gh-pages-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Try to download existing github-pages artifact (silent)
        id: check-existing
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: ./github-pages-check
        continue-on-error: true
        env:
          # Suppress error output from the action
          ACTIONS_STEP_DEBUG: false

      - name: Check if existing artifact is valid
        id: validate-existing
        run: |
          if [ -d "./github-pages-check" ] && [ "$(ls -A ./github-pages-check 2>/dev/null)" ]; then
            echo "existing=true" >> $GITHUB_OUTPUT
            echo "Found existing github-pages artifact - will reuse it"
          else
            echo "existing=false" >> $GITHUB_OUTPUT
            echo "No valid existing artifact - will create new one"
          fi

      - name: Checkout repository (for new artifact)
        if: steps.validate-existing.outputs.existing == 'false'
        uses: actions/checkout@v4

      - name: Download build artifact (for new artifact)
        if: steps.validate-existing.outputs.existing == 'false'
        uses: actions/download-artifact@v4
        with:
          name: build-dist
          path: ./new-build
          
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload to GitHub Pages (new artifact only)
        if: steps.validate-existing.outputs.existing == 'false'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./new-build
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4        

      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: ${{ vars.SLACK_CHANNEL_GH_PAGES }}
          slack-message: |
            üöÄ *GitHub Pages Deployment Completed*
            - *Method:* ${{ steps.validate-existing.outputs.existing == 'true' && '‚ôªÔ∏è Reused existing artifact' || 'üì¶ Created new artifact' }}
            - *Commit:* `${{ github.sha }}`
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

