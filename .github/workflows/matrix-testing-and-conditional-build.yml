name: Matrix Testing & Conditional Build

on:
  push:
    branches: [main]
    tags:
      - 'v*.*.*'
  pull_request:
  schedule:
    - cron: "0 3 * * *"   # Nightly test at 3 AM UTC
  workflow_dispatch:
    inputs:
      skip_build:
        description: "Skip build step?"
        required: false
        default: "false"

permissions:
  contents: write
  pages: write
  id-token: write


jobs:
  Matrix-Test:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./frontend/
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [16, 18, 20]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: |
          mkdir -p test-results
          npm test > test-results/results-${{ matrix.os }}-${{ matrix.node-version }}.txt

          # npm test -- --ci > test-results/results-ci-${{ matrix.node-version }}.txt

      - name: Debug
        run: echo "frontend/test-results/results-${{ matrix.os }}-${{ matrix.node-version }}.txt"
        
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.node-version }}
          path: frontend/test-results/results-${{ matrix.os }}-${{ matrix.node-version }}.txt

  Build:
    runs-on: ubuntu-latest
    needs: Matrix-Test
    if: |
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')) &&
      github.event.inputs.skip_build != 'true'
    defaults:
      run:
        working-directory: frontend/
    concurrency:
      group: build-${{ github.ref }}
      # group: matrix-test-${{ matrix.os }}-${{ matrix['node-version'] }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          path: test-results

      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Summarize test results
      #   run: |
      #     echo "=== Combined Test Results ==="
      #     cat test-results/*/results-*.txt > test-results/all-results.txt
      #     cat test-results/all-results.txt

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: |
          npm run build
          mkdir -p dist
          echo "Build complete for $GITHUB_SHA" > dist/build.txt

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-dist
          path: frontend/dist/

  Save-Build-To-Branch:
    runs-on: ubuntu-latest
    needs: Build   # only run after build completes
    steps:
      - name: Checkout empty repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # needed to push branch
          
      - name: Delete branch if exists (remote)
        run: |
          git push origin --delete build-archive || true

      - name: Create fresh orphan branch
        run: |
          git checkout --orphan build-archive
          git reset --hard
          git clean -fdx

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-dist
          path: ./dist

      - name: Commit build contents
        run: |
          rm -rf .github   # optional, avoid polluting branch with workflows
          git add dist
          git -c user.name="github-actions[bot]" \
              -c user.email="41898282+github-actions[bot]@users.noreply.github.com" \
              commit -m "Build archive for $GITHUB_SHA"

      - name: Force push build branch
        run: |
          git push origin build-archive --force

  Deploy-to-GH-Pages:
    runs-on: ubuntu-latest
    needs: Save-Build-To-Branch
    environment: github-pages
    concurrency:
      group: deploy-gh-pages-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout build-archive branch
        uses: actions/checkout@v4
        with:
          ref: build-archive

      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4        
        with:
          wait-for-deployment: true

      - name: Set Slack message on success
        if: ${{ steps.deployment.outcome == 'success' }}
        run: echo "SLACK_MESSAGE=✅ Deployment successful!" >> $GITHUB_ENV

      - name: Set Slack message on failure
        if: ${{ steps.deployment.outcome != 'success' }}
        run: echo "SLACK_MESSAGE=❌ Deployment failed!" >> $GITHUB_ENV


      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: ${{ vars.SLACK_CHANNEL_GH_PAGES }}
          slack-message: |
            🚀 *GitHub Pages Deployment Status*
            - *Message*: ${{ env.SLACK_MESSAGE }}
            - *Commit:* `${{ github.sha }}`
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

