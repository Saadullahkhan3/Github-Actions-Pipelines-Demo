name: Multi-Branch Environment Deployment

on:
  push:
    branches: [main, dev]
  pull_request:

jobs:
  Lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"

      - name: Install Depdendencies
        run: npm install

      - name: Linting
        run: npm run lint

  Test:
    needs: Lint # Only run when Lint job passed
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend/
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"

      - name: Install Depdendencies
        run: npm install

      - name: Testing
        run: npm test

  Build:
    needs: Test # Only run when Test job passed
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
    concurrency:
      group: build-${{ github.ref }}
      cancel-in-progress: true
    defaults:
      run:
        working-directory: ./frontend/
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"

      - name: Install Depdendencies
        run: npm install

      - name: Build
        run: npm run build

      # - name: Package build/test report
      #   run: |
      #     mkdir -p artifact
      #     echo "Build/Test report for $GITHUB_SHA" > artifact/report.txt
      # Save artifact for deploy job

      - name: Upload build output
        uses: actions/upload-artifact@v4
        with:
          name: web-dist # Logical artifact name
          path: frontend/dist/ # Directory or file path to upload

  Deploy-to-QA:
    runs-on: ubuntu-latest
    needs: Build
    if: github.ref == 'refs/heads/dev'
    concurrency:
      group: deploy-qa-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: web-dist

      - name: Deploy to QA
        run: |
          echo "Deploying to QA environment..."
          echo "Build artifacts downloaded successfully"
          ls -la

      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_QA }}  # Your Slack channel ID
          slack-message: "üöÄ QA deployment completed for ${{ github.sha }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  Deploy-to-Production:
    runs-on: ubuntu-latest
    needs: Build
    if: github.ref == 'refs/heads/main'
    concurrency:
      group: deploy-prod-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: web-dist

      - name: Deploy to Production
        run: |
          echo "Deploying to Production environment..."
          echo "Build artifacts downloaded successfully"
          ls -la
      
      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_PRODUCTION }}  # Your Slack channel ID
          slack-message: "üöÄ Production deployment completed for ${{ github.sha }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Production Status
        if: always()
        uses: ./.github/actions/slack-status-notifier
        with:
          success-message: "üöÄ PRODUCTION LIVE - All systems go!"
          failure-message: "üö® CRITICAL: Production deployment FAILED!"
          cancelled-message: "‚èπÔ∏è Production deployment halted"
          slack-channel: ${{ secrets.SLACK_CHANNEL_PRODUCTION }}
          slack-token: ${{ secrets.SLACK_BOT_TOKEN }}

